services:
  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    container_name: nextjs_frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_BACKEND_URL=http://backend:8010
    volumes:
      # Mount the source code for development (optional, remove for production)
      - ./frontend:/app
      # Avoid mounting node_modules from host
      - /app/node_modules
      # Avoid mounting .next from host
      - /app/.next
    networks:
      - backend_net
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: flask_backend
    restart: always
    ports:
      - "8010:8010"
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - backend_net
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8010/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_worker:
    build:
      context: .
      dockerfile: docker/celery.Dockerfile
    container_name: celery_worker
    restart: always
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - backend_net
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pRoot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  mariadb:
    image: mariadb:10.11
    container_name: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Root
      MYSQL_DATABASE: invoices
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - backend_net

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  mariadb_data:
  redis_data:

networks:
  backend_net:
