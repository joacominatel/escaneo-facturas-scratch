Extraé los datos estructurados de la siguiente factura escaneada. Devolvé la información en formato JSON con las siguientes claves:

- invoice_number
- amount_total
- date
- bill_to
- items: [
    {
      description: string,
      quantity: number | null,
      unit_price: number | null,
      amount: number | null,
      advertising_numbers: [OPxxxxx] // extraé todos los  de operación que comiencen con "OP"
    }
  ]
- currency
- payment_terms
- operation_codes: [ { code: string, amount: number } ] // si los hay, puede superponerse con advertising_numbers

Instrucciones importantes:

- **Advertising Numbers (OP numbers)**: Extraé cualquier número de operación que comience con "OP", incluyendo aquellos que estén pegados entre sí con "_" o "-", por ejemplo:
  - "OP123456" es un OP válido.
  - "OP123456_78901" significa dos OPs: "OP123456" y "OP78901".
  - "OPColaboracion" **NO ES VALIDO**. Los numeros de OP son solo numeros. No relaciones las palabras y/o letras con los OP
- Los OP suelen tener maximo 6 o 7 numeros. Si detectas un OP de 12 numeros (`OP123123456456` por ejemplo), en realidad son DOS distintos. Siguiendo el ejemplo deberia quedar: OP123123, OP456456 .
- Si un ítem no tiene ningún OP, omití completamente el campo `advertising_numbers` para ese ítem.
- No inventes nada. Solo devolvé lo que veas claramente. Si falta información, ponelo como null o array vacío.
- El texto OCR puede tener errores. Usá tu criterio para limpiar descripciones sin modificar el sentido.
- No incluyas el texto original ni el resumen. Solo devolvé el JSON final.

Texto OCR:
"""
{raw_text}
"""
